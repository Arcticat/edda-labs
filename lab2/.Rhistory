help
demo()
install.packages("rmarkdown")
quit()
setwd("~/Desktop/University/MSc/CS1/Period4/EDDA/Assignments/lab2")
p_val <- permutation_test()
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
nausea_frame <- data.frame(medicin = med_vec, naus = nausea_vec)
nausea_raw <- read.delim("./nauseatable.txt", header = TRUE, sep = "")
med_vec <- c();nausea_vec <- c()
for(i in 1:3) { med_name <- rownames(nausea_raw)[i]
for(j in 1:2) { nausea <- colnames(nausea_raw)[j]
for(k in 1:nausea_raw[,j][i]) { med_vec <- append(med_vec, med_name)
if(j == 1) { nausea_vec <- append(nausea_vec, "no")}
else if(j == 2){ nausea_vec <- append(nausea_vec, "yes")}
}
}
}
nausea_frame <- data.frame(medicin = med_vec, naus = nausea_vec)
xtabs(~nausea_frame$medicin + nausea_frame$naus)
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
p_val_chi <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[3]]
summary(search_aov)
summary(search_aov)
source('~/Desktop/University/MSc/CS1/Period4/EDDA/Assignments/lab2/asg2.R')
summary(search_aov)
summary(search_aov)[[1]]
summary(search_aov)[[2]]
summary(search_aov)[[3]]
summary(search_aov)[[4]]
summary(search_aov)[[4]][2]
summary(search_aov)[4][2]
summary(search_aov)[4]
summary(search_aov)[4][1]
summary(search_aov)[4][2]
summary(search_aov)[4][1][1]
summary(search_aov)[4][1][2]
summary(search_aov)$coefficients
summary(search_aov)$coefficients[[2]]
summary(search_aov)$coefficients[1]
summary(search_aov)$coefficients[0]
summary(search_aov)$coefficients[2]
summary(search_aov)$coefficients[3]
summary(search_aov)$coefficients[1][1]
summary(search_aov)$coefficients[,1]
summary(search_aov)$coefficients[1,]
summary(search_aov)$coefficients[3,]
contrasts(search_raw$interface) <- contr.sum
contrasts(search_raw$skill) <- contr.sum
search_aov2 <- lm(search_raw$time  ~ search_raw$interface + search_raw$skill)
summary(search_aov2)
search_raw <- read.delim("./search.txt", header = TRUE, sep = "")
I <- 3; B <- 5; N <- 1;
for(i in 1:B) print(sample(1:(N * I)))
par(mfrow = c(1,2))
boxplot(search_raw$time ~ search_raw$skill, main = "time VS skill Boxplot")
boxplot(search_raw$time ~ search_raw$interface, main = "time VS interface Boxplot")
interaction.plot(search_raw$skill, search_raw$interface, search_raw$time, trace.label = "Interface")
interaction.plot(search_raw$interface, search_raw$skill, search_raw$time, trace.label = "Skill")
search_raw$skill <- as.factor(search_raw$skill)
search_raw$interface <- as.factor(search_raw$interface)
search_aov <- lm(search_raw$time ~ search_raw$skill + search_raw$interface, data = search_raw)
print(anova(search_aov), signif.stars = F)
setwd("~/Desktop/University/MSc/CS1/Period4/EDDA/edda-labs/lab2")
install.packages("lme4")
install.packages("car")
names(summary(cowlm))
names(summary())
cowlm=lm(milk~id+per+treatment,data=cow); print(anova(cowlm), signif.stars = F);summary(cowlm)
I=3; J=2; N=3
rbind(rep(1:I,each=N*J),rep(1:J,N*I),sample(1:(N*I*J)))
breadata=read.table(file="bread.txt",header=TRUE);par(mfrow=c(2,2))
boxplot(hours~environment,data=breadata, main="box plot of hours-environment")
boxplot(hours~humidity, data=breadata,main="box plot of hours-humidity")
interaction.plot(breadata$environment,breadata$humidity,breadata$hours, main="interaction plot(humidity fixed)")
interaction.plot(breadata$humidity,breadata$environment,breadata$hours, main="interaction plot(environment fixed)")
breadaov=lm(hours~environment*humidity, data = breadata); anova(breadaov)
summary(breadaov)
par(mfrow=c(1,2));qqnorm(residuals(breadaov), main="QQ-plot residuals"); plot(fitted(breadaov),residuals(breadaov), main="residuals VS fitted values")
search_raw <- read.delim("./search.txt", header = TRUE, sep = "")
I <- 3; B <- 5; N <- 1;
for(i in 1:B) print(sample(1:(N * I)))
par(mfrow = c(1,2))
boxplot(search_raw$time ~ search_raw$skill, main = "time VS skill Boxplot")
boxplot(search_raw$time ~ search_raw$interface, main = "time VS interface Boxplot")
par(mfrow=c(1,2))
interaction.plot(search_raw$skill, search_raw$interface, search_raw$time, trace.label = "Interface")
interaction.plot(search_raw$interface, search_raw$skill, search_raw$time, trace.label = "Skill")
search_raw$skill <- as.factor(search_raw$skill)
search_raw$interface <- as.factor(search_raw$interface)
search_aov <- lm(search_raw$time ~ search_raw$skill + search_raw$interface, data = search_raw)
print(anova(search_aov), signif.stars = F)
contrasts(search_raw$interface) <- contr.sum; contrasts(search_raw$skill) <- contr.sum
search_aov2 <- lm(search_raw$time  ~ search_raw$interface + search_raw$skill)
summary(search_aov2)
options(digits = 6)
qqnorm(residuals(search_aov));qqline(residuals(search_aov))
plot(fitted(search_aov), residuals(search_aov))
print(shapiro.test(residuals(search_aov))) # fail to reject H0, might be normal
options(digits = 5)
friedman.test(search_raw$time, search_raw$interface, search_raw$skill)
search_aov_one_way <- lm(search_raw$time ~ search_raw$interface, data = search_raw)
print(anova(search_aov_one_way), signif.stars = F)
cow=read.table(file="cow.txt",header=TRUE)
cow$id=factor(cow$id); cow$per=factor(cow$per)
aovcow=lm(milk~treatment+id,data=cow);print(anova(aovcow), signif.stars = F)
par(mfrow=c(1,2));plot(aovcow,1);plot(aovcow,2)
cowlm=lm(milk~id+per+treatment,data=cow); print(anova(cowlm), signif.stars = F);summary(cowlm)
library("lme4")
cowlmer=lmer(milk~treatment+order+per+(1|id),REML=FALSE, data = cow);summary(cowlmer)
cowlmer1 = lmer(milk~order+per+(1|id),REML=FALSE, data = cow)
anova(cowlmer,cowlmer1)
attach(cow)
t.test(milk[treatment=="A"],milk[treatment=="B"],paired=TRUE)
nausea_raw <- read.delim("./nauseatable.txt", header = TRUE, sep = "")
med_vec <- c();nausea_vec <- c()
for(i in 1:3) { med_name <- rownames(nausea_raw)[i]
for(j in 1:2) { nausea <- colnames(nausea_raw)[j]
for(k in 1:nausea_raw[,j][i]) { med_vec <- append(med_vec, med_name)
if(j == 1) { nausea_vec <- append(nausea_vec, "no")}
else if(j == 2){ nausea_vec <- append(nausea_vec, "yes")}
}
}
}
nausea_frame <- data.frame(medicin = med_vec, naus = nausea_vec)
xtabs(~nausea_frame$medicin + nausea_frame$naus)
permutation_test <- function() {
B <- 1000; Tstar <- numeric(B)
for(i in 1:B) { Xstar <- sample(nausea_frame$medicin)
Tstar[i] <- chisq.test(xtabs(~Xstar + nausea_frame$naus))[[1]]}
t <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[1]]
p1 <- sum(Tstar < t) / B; pr <- sum(Tstar > t) / B
p <- 2 * min(pr, p1)
return(p)
}
p_val <- permutation_test()
options(digits = 3)
p_val_chi <- chisq.test(xtabs(~nausea_frame$medicin + nausea_frame$naus))[[3]]
expensescrime=read.table(file="expensescrime.txt",header=TRUE)
par(mfrow=c(2,3))
for (i in c(2,3,4,5,6,7)) hist(expensescrime[,i],main=names(expensescrime[i]))
plot(expensescrime[,c(2,3,4,5,6,7)])
par(mfrow=c(2,3))
expensescrimelm=lm(expend~bad+crime+lawyers+employ+pop,data=expensescrime)
round(cooks.distance(expensescrimelm),2)
plot(cooks.distance(expensescrimelm),type="b",main="Cook's distances")
library(car)
vif(expensescrimelm)
round(cor(expensescrime[,c(3,4,5,6,7)]),2)
summary(lm(expend~bad,data=expensescrime))[8]
summary(lm(expend~crime,data=expensescrime))[8]
summary(lm(expend~lawyers,data=expensescrime))[8]
summary(lm(expend~employ,data=expensescrime))[8]
summary(lm(expend~pop,data=expensescrime))[8]
summary(lm(expend~employ+bad,data=expensescrime))[8]
summary(lm(expend~employ+crime,data=expensescrime))[8]
summary(lm(expend~employ+lawyers,data=expensescrime))[8]
summary(lm(expend~employ+pop,data=expensescrime))[8]
summary(lm(expend~bad+crime+lawyers+employ+pop,data=expensescrime))[8]
summary(lm(expend~bad+lawyers+employ+pop,data=expensescrime))[8]
summary(lm(expend~bad+lawyers+employ,data=expensescrime))[8]
summary(lm(expend~lawyers+employ,data=expensescrime))[8]
expendemploylawyerslm=lm(expend~employ+lawyers,data=expensescrime)
par(mfrow=c(3,3))
plot(residuals(expendemploylawyerslm),expensescrime$employemploy,main="plot of residuals against employ")
plot(residuals(expendemploylawyerslm),expensescrime$lawyers,main="plot of residuals against lawyers")
x=residuals(lm(expensescrime$employ+expensescrime$lawyers~expensescrime$bad+expensescrime$crime+expensescrime$pop))
y=residuals(lm(expensescrime$expend~expensescrime$bad+expensescrime$crime+expensescrime$pop))
plot(x,y,main="Added variable plot for employ+lawyers")
plot(residuals(expendemploylawyerslm),expensescrime$bad,main="plot of residuals against bad")
plot(residuals(expendemploylawyerslm),expensescrime$crime,main="plot of residuals against crime")
plot(residuals(expendemploylawyerslm),expensescrime$pop,main="plot of residuals against pop")
plot(residuals(expendemploylawyerslm),expensescrime$expend,main="plot of residuals against expend")
plot(fitted(expendemploylawyerslm),residuals(expendemploylawyerslm))
qqnorm(residuals(expendemploylawyerslm))
library(car)
vif(expendemploylawyerslm)
summary(lm(expend~lawyers,data=expensescrime))[8]
summary(lm(expend~employ,data=expensescrime))[8]
names(summary(cowlm))
summary(cowlm)[,4]
summary(cowlm)$coefficients[,4]
